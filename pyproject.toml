[project]
name = "aristote"
description = "Generate quizzes with Large Language Models for educational purposes"
dynamic = ["version"]
authors = [{ name = "Antonio Loison", email = "antonio.loison@illuin.tech" }]
maintainers = [{ name = "Antonio Loison", email = "antonio.loison@illuin.tech" }]
readme = "README.md"
requires-python = ">=3.10,<3.12"
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Private :: Do Not Upload",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]
dependencies = [
    "jsonlines>=4.0.0",
    "requests>=2.31.0",
    "diskcache>=5.6.3",
    "pydantic>=2.0.3",
    "tqdm>=4.66.1",
    "transformers>=4.43.0",
    "configue>=4.2.0",
    "click>=8.1.7",
    "nltk>=3.9.1",
    "backoff>=2.2.1",
    "openai>=1.14.2",
    "tiktoken>=0.5.1,<0.6.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "uvicorn>=0.29.0",
    "fastapi>=0.110.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.3.0,<25.0.0",
    "deptry>=0.15.0,<0.16.0",
    "mypy>=1.9.0,<2.0.0",
    "ruff>=0.3.4,<0.4.0",
    "coverage>=7.4.0,<8.0.0",
    "pytest>=8.1.0,<9.0.0",
]
notebook = [
    "ipykernel>=6.26.0",
    "nbformat>=5.9.2",
]
demo = [
    "gradio>=4.1.2",
    "unidecode>=1.3.7",
]

[project.urls]
homepage = "https://github.com/CentraleSupelec/aristote-llm-workers"
repository = "https://github.com/CentraleSupelec/aristote-llm-workers"

[build-system]
requires = ["setuptools", "setuptools-scm[toml]", "wheel"]
build-backend = "setuptools.build_meta"

[project.scripts]
aristote = "aristote.cli.cli:main"

[tool.setuptools_scm]
fallback_version = "0.0.0-dev"

[tool.setuptools]
zip-safe = false
platforms = ["any"]

[tool.setuptools.packages.find]
include = ["aristote", "aristote.*", "server", "server.*"]

[tool.setuptools.package-data]
aristote = ["py.typed"]

[tool.deptry.per_rule_ignores]
DEP002 = [
    "Jinja2",
    "GitPython",
    "python-slugify",
    "black", # dev dependency
    "copier", # dev dependency
    "deptry", # dev dependency
    "isort", # dev dependency
    "coverage", # dev dependency
    "mypy", # dev dependency
    "types-requests", # dev dependency
    "pip-tools", # dev dependency
    "pytest", # dev dependency
    "parameterized", # dev dependency
    "ruff", # dev dependency
    "jinja2-time", # dev dependency
    "types-python-slugify", # dev dependency
    "aristote", # project dependency
    "gradio", # demo dependency
    "ipykernel", # notebook dependency
    "nbformat", # notebook dependency
]

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
enable_error_code = ["ignore-without-code"]
exclude = ["docs/", "venv/", ".venv/", "demonstrator/"]
mypy_path = "$MYPY_CONFIG_FILE_DIR/typings"
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true

[tool.coverage.run]
include = ["aristote/*"]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == \"__main__\":",
    "if TYPE_CHECKING:",
    "def __repr__",
    "@abstractmethod",
]

[tool.black]
line-length = 88

[tool.ruff]
select = ["E", "F", "W", "I", "N"]
line-length = 88

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"server/app.py" = ["E402"]
"server/dtos.py" = ["N815"]
"test_api.py" = ["E501"]
"aristote/cli/cli.py" = ["E402"]
"aristote/translate_quizz.py" = ["E402"]
"aristote/evaluate_quizz.py" = ["E402"]
"aristote/generate_quizz.py" = ["E402"]

[tool.pytest.ini_options]
addopts = ["-ra", "--strict-markers"]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s %(levelname)s [%(filename)s:%(lineno)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
